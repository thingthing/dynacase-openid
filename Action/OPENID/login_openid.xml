<div>
<script language="JavaScript">
<!--

var isNN = (navigator.appName.indexOf("Netscape") != -1);
if (isNN) {
  document.captureEvents(Event.KEYPRESS)
}
document.onkeypress = trackEnter

function trackEnter(evt)
{
  var intKeyCode;

  if (isNN)
    intKeyCode = evt.which;
  else
    intKeyCode = window.event.keyCode;

  if (intKeyCode == 13) { // enter key
      return (verify_login(document.loginform,'[TEXT:openid:warning_name]'));
  }
  else {
  	return true;
  }
}

function verify_login(aform, usermsg)
{
  var user = aform.openid_identifier.value;
  if (user == "") {
    document.getElementById('msgerr').innerHTML  = usermsg;
    document.forms['loginform'].elements['openid_identifier'].focus(); 
    return false;
  }
  return true;
}

function aumilieu(eid) {
   var winH=getFrameHeight();
   var winW=getFrameWidth();
   if (document.getElementById) { // DOM3 = IE5, NS6
   var divlogo = document.getElementById(eid);
   divlogo.style.position = 'absolute';
   if ((winH>0) && (winW>0)) {
     divlogo.style.top = (winH/2 - (divlogo.offsetHeight/2)+ document.body.scrollTop)+'px';
     divlogo.style.left = (winW/2 - (divlogo.offsetWidth/2))+'px';
   }
 }
 return true;
}

function display_help() {
  aumilieu('zonehelp');
  document.getElementById('zonehelp').style.visibility = 'visible';
  document.getElementById('zonehelp').style.zIndex = 100;
}

function close_help() {
  document.getElementById('zonehelp').style.visibility = 'hidden';
}

function centerZone() {
aumilieu('authform');
aumilieu('zonehelp');
}

/**
 * Functions for the selector of openid providers
 */

function log(msg) 
{
	if (window.console) {window.console.log('ID Selector: ' + msg);}
}

function readCookie(name) 
{
	var nameEQ = name + "=";
	var ca = document.cookie.split(';');
	for(var i=0;i < ca.length;i++) 
		{
			var c = ca[i];
			while (c.charAt(0)==' ') c = c.substring(1,c.length); 
			{
				if (c.indexOf(nameEQ) == 0) 
					{
						return decodeURIComponent(c.substring(nameEQ.length,c.length));
					}
			}
		}
	return null;
}

function gen_selector() 
{
		
		var quirksMode = document.compatMode != 'CSS1Compat';		

		var openidCookie = readCookie('__openid_selector_openid');
		var opIdCookie = readCookie('__openid_selector_op_id');
		var unameCookie = readCookie('__openid_selector_uname');

		var s;
	
		//	List of openid providers you want to have in the popup.
		//	All fields are requiered.
		//	If you don't know the value or don't want to put one, just insert an empty string.
		//	Attibute:
		//		-Longname= full name of the provider
		//		-shortname= name that will apear in the box
		//		-url_suffix= part of the url after the username
		//		-url_prefix= part of the url before the username
		//		-usercalled= name of the user by default
		//		-icon = picture that appear next to the name of the provider
		//		-id = unique id for the provider. Just input a random number
		//		-website = adress of the website of the provider
		//		-openid2 = true if it is not the default openid provider, false otherwise: if false, the provider will appear as default provider.
		//		-openid1 = true if you want the special field where you can input username.
		var providers = [[BLOCK PROVIDERS][DATA][ENDBLOCK PROVIDERS]];
		var oidTbId = window.idselector_input_id ? window.idselector_input_id : "openid_identifier";
		var oidTb = document.getElementById(oidTbId);
		if (oidTb == null) {log('couldn\'t find openid input box'); return;}
		//oidTb.value = "http://";
		var orig = oidTb.value;

		var btnIcn = document.createElement('img');
		s = btnIcn.style; s.width = '16px'; s.height = '16px';
		s.verticalAlign = 'middle'; s.padding = '0px'; s.border = '0px';
		s.margin = '0px'; s.display = 'inline';

		var btnMkr = document.createElement('div');
		btnMkr.innerHTML = "<button type=\"button\"></button>";

		var btn = btnMkr.firstChild;
		btnMkr.removeChild(btn);
		btn.id = '__idselector_button';
		btn.style.cursor = "pointer";

		btn.appendChild(btnIcn);
		btn.appendChild(document.createTextNode(" "));

		var popup = document.createElement('iframe');
		popup.frameBorder = 0; popup.scrolling = 'no';
		s = popup.style; s.visibility = 'hidden'; s.position = 'absolute';
		s.width = '300px'; s.height = '0px'; s.margin = '0px'; s.padding = '0px'; s.zIndex = 10000;
		s.border = '0px';

		var prnt = oidTb.parentNode;
		var target = null;
		if (window.idselector_target_id) 
			{
				target = document.getElementById(window.idselector_target_id);
				if (!target) {log("couldn't find element with id " + window.idselector_target_id);}
			}
		if (target) 
			{
				target.insertBefore(btn, target.firstChild);
			} 
		else 
			{
				prnt.insertBefore(btn, oidTb.nextSibling);
				prnt.insertBefore(document.createTextNode(" "), btn);
			}
		document.body.appendChild(popup);

		var pdoc = popup.contentWindow.document;
		pdoc.open();
		pdoc.write('<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"><html><head><title>ID Selector</title><style type=\"text/css\">html{color:#000;background:#6e91af;}body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td{margin:0;padding:0;}table{border-collapse:collapse;border-spacing:0;}fieldset,img{border:0;}address,caption,cite,code,dfn,em,strong,th,var{font-style:normal;font-weight:normal;}li{list-style:none;}caption,th{text-align:left;}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:normal;}q:before,q:after{content:\'\';}abbr,acronym {border:0;font-variant:normal;}sup {vertical-align:text-top;}sub {vertical-align:text-bottom;}input,textarea,select{font-family:inherit;font-size:inherit;font-weight:inherit;}input,textarea,select{*font-size:100%;}legend{color:#000;}body {border:1px solid #6e91af;font:13px/1.231 arial,helvetica,clean,sans-serif;*font-size:small;*font:x-small;}table {font-size:inherit;font:100%;}pre,code,kbd,samp,tt{font-family:monospace;*font-size:108%;line-height:100%;}</style></head><body></body></html>');
		pdoc.close();

		var pbody = pdoc.body;

		var back = pdoc.createElement('img');
		back.style.verticalAlign = "middle"; back.style.cursor = "pointer";
		back.src = "OPENID/Images/arrow_white_back.png";

		var forward = pdoc.createElement('img');
		forward.style.verticalAlign = "middle"; forward.style.cursor = "pointer";
		forward.src = "OPENID/Images/arrow_white_forward.png";

		var headRight = pdoc.createElement('div');
		headRight.style[document.all ? 'styleFloat' : 'cssFloat'] = 'right';
		headRight.innerHTML = '<a href="https://www.myopenid.com/signup" style="color:#fff;" target="_blank">Get OpenID</a>';

		var header = pdoc.createElement('div');
		s = header.style; s.fontWeight = "bold"; s.color = "#fff";
		s.padding = "2px 8px 2px 8px";

		header.appendChild(headRight);
		header.appendChild(pdoc.createTextNode("Choose openid provider"));

		var nameLabel = pdoc.createElement('span');
		nameLabel.appendChild(pdoc.createTextNode("xxx:"));

		var nameTb = pdoc.createElement('input');
		nameTb.type = "text";
		nameTb.size = 15;
		s = nameTb.style; s.verticalAlign = 'middle'; s.padding = '2px 2px 2px 20px';
		s.backgroundRepeat = 'no-repeat'; s.backgroundPosition = '2px 2px';

		var footer = pdoc.createElement('div');
		s = footer.style;
		s.color = "#fff";
		s.padding = "2px 8px 2px 8px";
		s.textAlign = "right";
		s.position = "relative";

		footer.appendChild(nameLabel);
		footer.appendChild(pdoc.createTextNode(" "))
		footer.appendChild(nameTb);
		
		function Cell(grid, idx) 
		{
			this.grid = grid;
			this.idx = idx;

			var td = this.td = pdoc.createElement('td');
			s = td.style;
			s.fontWeight = "bold";
			s.padding = "4px";
			s.verticalAlign = "middle";
			s.cursor = "pointer";

			var _this = this;
			td.onmouseover = function () 
			{
				_this.onMouseOver();
			}
			td.onmouseout = function () 
			{
				_this.onMouseOut();
			}
			td.onclick = function () 
			{
				_this.onClick();
			}

			var provider = providers[idx];
			var icon = pdoc.createElement("img");
			icon.src = provider ? ('OPENID/Images/' + provider.icon) : '';
			icon.style.width = "16px";
			icon.style.height = "16px";
			icon.style.verticalAlign = "middle";
			td.appendChild(icon);
			td.appendChild(pdoc.createTextNode(" "));
			if (provider) {
				td.appendChild(pdoc.createTextNode(provider.shortname));
			}
			this.selected = false;
		}

		_ = Cell.prototype = {};
		_.onMouseOver = function () 
		{
			if (!this.selected) 
				{
					this.td.style.backgroundColor = "#eee";
				}
		}
		_.onMouseOut = function () 
		{
			if (!this.selected) 
				{
					this.td.style.backgroundColor = "";
				}
		}
		_.onClick = function () 
		{
			this.grid.select(this);
			provider = providers[this.idx];
			if (provider["openid2"] && !provider["openid1"]) 
				{
					oidTb.focus();
					//setTimeout(hidePopup, 1);
				} 
			else 
				{
					nameTb.focus();
					nameTb.select();
				}
		}

		_.setSelected = function (selected) 
		{
			this.td.style.backgroundColor = selected ? '#c6d9e8' : "";
			this.selected = selected;
		}

		function Grid() 
		{
			this.table = pdoc.createElement('table');
			this.table.style.backgroundColor = "#FFF";
			this.table.style.width = "100%";
			this.table.style.border = "1px solid #6e91af";
			this.tbody = pdoc.createElement('tbody');
			this.table.appendChild(this.tbody);
			this.maxOffset = (Math.ceil(providers.length/12) - 1) * 12;
			this.cells = [];
			for (var i = 0; i < providers.length; i++) 
				{
					this.cells[i] = new Cell(this, i);
				}

			this.rows = [pdoc.createElement('tr'), pdoc.createElement('tr'),
			pdoc.createElement('tr'), pdoc.createElement('tr')];

			//this.otherCell = new Cell(this, -1);
			var links = pdoc.createElement('td');
			links.style.padding = "4px";
			links.style.textAlign = "right";
			links.style.verticalAlign = "middle";
			links.colSpan = 2;
			links.innerHTML = '<a href="http://openid.net/" style="color:#6e91af;" target="_blank">Help</a>';

			var bottom_row = pdoc.createElement('tr');
			bottom_row.style.borderTop = "1px solid #AAA";
			//bottom_row.appendChild(this.otherCell.td);
			bottom_row.appendChild(links);

			for (var j = 0; j < 4; j++) {this.tbody.appendChild(this.rows[j]);}
			this.tbody.appendChild(bottom_row);

			this.offset = 0;
		}

		_ = Grid.prototype = {};
		_.forward = function() 
		{
			this.offset = Math.min(this.offset + 12, this.maxOffset);
			this.gen();
		}
		_.back = function() 
		{
			this.offset = Math.max(this.offset - 12, 0);
			this.gen();
		}
		_.gen = function() 
		{
			for (var i = 0; i < 4; i++) 
				{
					var row = this.rows[i];
					while (row.firstChild) {row.removeChild(row.firstChild);}
				}
			for (var i = 0; i < 12; i++) 
				{
					var row = this.rows[Math.floor(i/3)];
					var cell = this.cells[this.offset + i];
					if (cell) 
						{
							row.appendChild(cell.td);
						} 
					else 
						{
							row.appendChild(pdoc.createElement('td'));
						}
				}
			forward.style.visibility = (this.offset == this.maxOffset) ? 'hidden' : '';
			back.style.visibility = (this.offset == 0) ? 'hidden' : '';
			popup.style.height = (pbody.offsetHeight + 2) + "px";
		}

		_.select = function (cell) 
		{
			if (this.curr) 
				{
					this.curr.setSelected(false);
				}

			this.curr = cell;
			cell.setSelected(true);
			if (cell.idx > -1) 
				{
					var provider = providers[cell.idx];

					if (provider["openid2"] && !provider["openid1"]) 
						{
							nameLabel.style.visibility = 'hidden';
							nameTb.style.visibility = 'hidden';
							oidTb.value = provider['website'];
						} 
					else
						{
							nameLabel.style.visibility = '';
							nameTb.style.visibility = '';
					
							nameLabel.removeChild(nameLabel.firstChild);
							var s = pdoc.createTextNode(provider.longname + " Username:");
							nameLabel.appendChild(s);
							nameTb.style.backgroundImage = 'url(OPENID/Images/' + provider.icon + ')';
							nameTb.value = "username";
							oidTb.value = provider.url_prefix + nameTb.value + provider.url_suffix;
						}
					btnIcn.src = 'OPENID/Images/' + provider.icon;
				} 
			else 
				{
					nameLabel.style.visibility = 'hidden';
					nameTb.style.visibility = 'hidden';
					btnIcn.src = 'OPENID/Images/default.ico';
				}
		}

		_.setName = function (name) 
		{
			var p = providers[this.curr.idx];
			oidTb.value = p.url_prefix + name + p.url_suffix;
		}

		var grid = new Grid();
		grid.gen();

		pbody.appendChild(header);
		pbody.appendChild(grid.table);
		pbody.appendChild(footer);
		
		//showPopup();
		
		function showPopup() 
		{
			var scrolled = window.ActiveXObject ? (quirksMode ? document.body.scrollLeft : document.documentElement.scrollLeft) : window.pageXOffset;
			var viewportWidth = quirksMode ? document.body.clientWidth : document.documentElement.clientWidth;
			var xUpper = viewportWidth + scrolled - 401;
			var x = oidTb.offsetLeft;
			var y = oidTb.offsetTop;
			if (oidTb.clientTop) 
				{
					y += oidTb.clientTop;
				} 
			else if (document.defaultView && document.defaultView.getComputedStyle) 
				{
					var cs = document.defaultView.getComputedStyle(oidTb, '');
					y += parseInt(cs.getPropertyValue('border-top-width'));
					y += parseInt(cs.getPropertyValue('border-bottom-width'));
				}

			var w = oidTb.offsetParent;
			while (w) 
				{
					x += w.offsetLeft;
					y += w.offsetTop;
					if (w.clientLeft) 
						{
							x += w.clientLeft;
							y += w.clientTop;
						} 
					else if (document.defaultView && document.defaultView.getComputedStyle) 
						{
							var cs = document.defaultView.getComputedStyle(w, '');
							y += parseInt(cs.getPropertyValue('border-top-width'));
							x += parseInt(cs.getPropertyValue('border-left-width'));
						}
					w = w.offsetParent;
				}
			y = y + oidTb.offsetHeight;

			x = Math.max(Math.min(x, xUpper), 0);

			var s = popup.style; s.left = x + "px"; s.top = y + "px";
			s.visibility = 'visible'; s.height = (pbody.offsetHeight + 12) + "px";
			var html = document.body.parentNode;
		}
		
		function hidePopup() 
		{
			popup.style.visibility = 'hidden';
		}

		function cursorEnd(tb) 
		{
			if (tb.isTextEdit) 
				{
					var rng = tb.createTextRange();
					if (rng) 
						{
							rng.move("character", tb.value.length);
							rng.select();
						}
				}

		}

		function oidFocus() 
		{
			if (oidTb.value == "") 
				{
					oidTb.value = 'http://';
					nameLabel.style.visibility = 'hidden';
					nameTb.style.visibility = 'hidden';
				}
			cursorEnd(oidTb);
			showPopup();
		}

		btn.onclick = function(e) 
		{
			(popup.style.visibility == 'hidden') ? showPopup() : showPopup();
			if (e) {e.cancelBubble = true;} /* safari */
			return false;
		}

		btn.onfocus = function () 
		{
			btn.blur();
		}

		forward.onclick = function() 
		{
			grid.forward();
		}

		back.onclick = function() 
		{
			grid.back();
		}

		oidTb.onkeypress = function(e) 
		{
			var key;
			if(window.event) 
				{
					key = window.event.keyCode;
				} 
			else if(e.which) {key = e.which;}
			if (key != 13 && key != 9) 
				{
					nameLabel.style.visibility = 'hidden';
					nameTb.style.visibility = 'hidden';
				}
		}


		nameTb.onkeydown = function(e) 
		{
			var key;
			if(popup.contentWindow.event) 
				{
					key = popup.contentWindow.event.keyCode;
				} 
			else if(e.which) {key = e.which;}
			if (key == 13 || key == 9) 
				{
					setTimeout(function () 
							{
								oidTb.onfocus = oidFocus;
								oidTb.focus();
								setTimeout(hidePopup, 1);
							}, 1);
				}
		}

		nameTb.onkeyup = function() 
		{
			var val = this.value;
			if (!val) 
				{
					val = "username";
					this.value = val;
					this.select();
				}
			grid.setName(val);
		}

		oldOnResize = window.onresize;
		window.onresize = function (evt) 
		{
			try 
			{
				if (popup.style.visibility == 'visible') 
					{
						showPopup();
					}
			} 
			finally 
			{
				oldOnResize && oldOnResize(evt);
			}
		}

		oldOnScroll = window.onscroll;
		window.onscroll = function (evt) 
		{
			try 
			{
				if (popup.style.visibility == 'visible') 
					{
						showPopup();
					}
			} 
			finally 
			{
				oldOnScroll && oldOnScroll(evt);
			}
		}

		/*if (opIdCookie) 
			{
				var cell = null;
				for (var i = 0; i < providers.length; i++) 
					{
						if (providers[i].id == opIdCookie) 
							{
								cell = grid.cells[i];
							}
					}

			if (cell) 
				{
					grid.select(cell);
					nameTb.value = unameCookie;
				}
			}*/

		/*if (!grid.curr) 
			{
				grid.select(grid.otherCell);
			}*/
		if (orig.length == 0) 
			{
				oidTb.value = "";
			}

		function createCookie(name,value,days) 
		{
			if (days) 
				{
					var date = new Date();
					date.setTime(date.getTime()+(days*24*60*60*1000));
					var expires = "; expires="+date.toGMTString();
				}
			else var expires = "";
			document.cookie = name+"="+encodeURIComponent(value)+expires+"; path=/";
		}

		oidTb.onfocus = oidFocus;


		var form = null;
		prnt = oidTb.parentNode;
		while (prnt && prnt.nodeType == 1) 
			{
				if (prnt.nodeName == 'FORM') 
					{
						form = prnt;
						break;
					}
				prnt = prnt.parentNode;
			}
		if (form) 
			{
				var oldOnSubmit = form.onsubmit;
				form.onsubmit = function(evt) 
				{
					try 
					{
						createCookie('__openid_selector_openid', oidTb.value, 365);
						if (grid.curr.idx > -1) 
							{
								var opId = providers[grid.curr.idx].id;
								createCookie('__openid_selector_op_id', opId, 365);
								createCookie('__openid_selector_uname', nameTb.value, 365);
							} 
						else 
							{
								createCookie('__openid_selector_op_id','',-1);
								createCookie('__openid_selector_uname','',-1);
							}
					} 
					finally 
					{
						if (oldOnSubmit) 
							{
								return oldOnSubmit(evt);
							}
					}
				};
			}

		if (window.ActiveXObject) 
			{
				document.body.parentNode.attachEvent('onclick', 
						function() 
						{
							if (window.event.srcElement != oidTb && window.event.srcElement != btn) 
								{
									showPopup();
								}
						});
			} 
		else 
			{
				document.body.parentNode.addEventListener('click', 
						function(evt) 
						{
							if (evt.target != oidTb && evt.target != btn) {hidePopup();}
						}, false);
			}
}

function openid_selector() 
{
	[IF PROVIDER]
	var oldOnLoad = window.onload;
	window.onload = function(evt) 
	{
		try 
		{
			gen_selector();
		} 
		finally 
		{
			return oldOnLoad && oldOnLoad(evt);
		}
	}
	[ENDIF PROVIDER]
}
//-->

</script>

<div id="zonehelp" class="zhelp">
<div class="title">Aide &agrave; la connexion</div>
<div class="content">Cette fen&ecirc;tre permet de vous identifier,
c'est &agrave; dire indiquer aux applications qui vous &ecirc;tes. <br />
<br />
Ceci est n&eacute;cessaire pour garantir que les informations vous
concernant sont accessibles seulement par vous-m&ecirc;me. Pour vous
identifier, il vous faut saisir un identifiant openid. (si vous n'en
poss&eacute;dez pas vous pouvez en cr&eacute;er un sur
https://www.myopenid.com/signup). Vous serez ensuite redirig&eacute;
vers votre provider openid.<br />
<br />
Il est important de respecter la casse (utilisation des
caract&egrave;res majuscule et minuscule) lors de la saisie de votre
identifiant<br />
Pour vous connecter en admin, cliquez sur le lien "admin connexion"<br/>
</div>
<div class="close"><a href="javascript:close_help()">fermer l'aide</a></div>
</div>
<form action="index.php" method="post" name="loginform" onsubmit="return verify_login(this.document.loginform, 'Your openid username is required')">
<input type="hidden" name="openid_action" value="login" />
<div id="authform" class="authmain">

<div class="form">

<div class="banner">
      <table cellspacing="0"><tr>
        <td><img width="48px" src="[CORE_LOGOCLIENT]" needresize="1"/></td>
        <td><span class="societe">[CORE_CLIENT]</span><br>[CORE_REALM]</td>
      </tr></table>
</div>

<div class="zoneinput">
<table cellspacing="0">
	<tr>
		<td class="label">Username</td>
		<td class="input"><input type="text" name="openid_identifier"
			id="openid_identifier" /></td>
		<td class="input"><input type="submit" name="submit"
			value="login &gt;&gt;" /></td>
	</tr>
</table>
</div>
[IF NOSERVER]
<div id="msgerr" class="message">[TEXT:openid:servernotfound]</div>
[ENDIF NOSERVER]
[IF NOTVALID]
<div id="msgerr" class="message">[TEXT:openid:notvalid]</div>
[ENDIF NOTVALID]
[IF CANCEL]
<div id="msgerr" class="message">[TEXT:openid:cancel]</div>
[ENDIF CANCEL]
[IF NOVERSION]
<div id="msgerr" class="message">[TEXT:openid:noversion]</div>
[ENDIF NOVERSION]
<div class="buttons">
[IF HTMLINFO]
<a href=[FREEDOMPROVIDER]>[TEXT:openid:Admin connexion]</a>
[ENDIF HTMLINFO]
<a href="javascript:display_help()">[TEXT:openid:help]</a>
</div>
</div>

</div>

</form>
<script>
<!--
addEvent(window,'load',centerZone);
addEvent(window,'resize',centerZone);
document.getElementById('zonehelp').style.visibility = 'hidden';
openid_selector();
//-->
</script> 

</div>
